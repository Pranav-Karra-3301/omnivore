version: '3.8'

services:
  omnivore-api:
    build: .
    container_name: omnivore-api
    ports:
      - "3000:3000"
    environment:
      - RUST_LOG=info
      - OMNIVORE_DATA_DIR=/var/lib/omnivore
      - DATABASE_URL=postgresql://omnivore:password@postgres:5432/omnivore
      - REDIS_URL=redis://redis:6379
    volumes:
      - omnivore-data:/var/lib/omnivore
      - ./configs:/etc/omnivore/configs:ro
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16-alpine
    container_name: omnivore-postgres
    environment:
      - POSTGRES_DB=omnivore
      - POSTGRES_USER=omnivore
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U omnivore -d omnivore"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: omnivore-redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Optional: Browser automation service
  selenium:
    image: selenium/standalone-chrome:latest
    container_name: omnivore-selenium
    ports:
      - "4444:4444"
      - "5900:5900"
    environment:
      - SE_VNC_VIEW_ONLY=1
    volumes:
      - /dev/shm:/dev/shm
    restart: unless-stopped
    profiles:
      - browser

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: omnivore-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: omnivore-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  omnivore-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  default:
    name: omnivore-network